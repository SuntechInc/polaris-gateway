name: Deploy Homolog

on:
  push:
    branches:
      - develop  # Essa Ã© a branch que dispara o deploy de homolog

jobs:
  build-and-deploy-homolog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # 1. Login no Docker Hub
      - name: Login no Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "ðŸ”‘ Logando no Docker Hub..."
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
          echo "âœ… Login bem-sucedido!"

      # 2. Build e push da imagem com tag 'homolog'
      - name: Build & push (Homolog)
        run: |
          echo "ðŸ”¨ Buildando imagem de Homolog..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/polaris-gateway:homolog .
          docker push ${{ secrets.DOCKER_USERNAME }}/polaris-gateway:homolog

      # 3. SSH na VPS e rodar container de homolog
      - name: Deploy Homolog via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "ðŸ“¥ Baixando nova versÃ£o da imagem de Homolog..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/polaris-gateway:homolog

            echo "ðŸ›‘ Parando e removendo container antigo de Homolog (se existir)..."
            docker stop polaris_gateway_homolog || true
            docker rm polaris_gateway_homolog || true

            echo "ðŸš€ Iniciando novo container de Homolog..."
            # ObservaÃ§Ã£o: Usamos -p 3001:3000 para nÃ£o conflitar com a porta 3000 do ambiente de prod
            docker run -d \
              --network polaris_network \
              -p 3001:3000 \
              --name polaris_gateway_homolog \
              ${{ secrets.DOCKER_USERNAME }}/polaris-gateway:homolog

            echo "âœ… Deploy de Homolog finalizado!"
